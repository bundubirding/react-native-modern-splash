{"version":3,"file":"codegen.js","names":["_kleur","_interopRequireDefault","require","_patchCodegenAndroidPackage","_fsExtra","_path","_del","_runRNCCli","e","__esModule","default","build","root","report","packageJsonPath","path","resolve","packageJson","fs","readJson","codegenIosPath","codegenConfig","outputDir","ios","info","kleur","blue","relative","del","codegenAndroidPath","android","codegenType","type","undefined","error","process","exit","runRNCCli","patchCodegenAndroidPackage","success","stdout","toString","message","includes"],"sources":["../../src/targets/codegen.ts"],"sourcesContent":["import kleur from 'kleur';\nimport type { Input } from '../types';\nimport { patchCodegenAndroidPackage } from '../utils/patchCodegenAndroidPackage';\nimport fs from 'fs-extra';\nimport path from 'path';\nimport del from 'del';\nimport { runRNCCli } from '../utils/runRNCCli';\n\ntype Options = Input;\n\nexport default async function build({ root, report }: Options) {\n  const packageJsonPath = path.resolve(root, 'package.json');\n  const packageJson = await fs.readJson(packageJsonPath);\n\n  const codegenIosPath = packageJson.codegenConfig?.outputDir?.ios;\n  if (codegenIosPath != null) {\n    report.info(\n      `Cleaning up previous iOS codegen native code at ${kleur.blue(\n        path.relative(root, codegenIosPath)\n      )}`\n    );\n    await del([codegenIosPath]);\n  }\n\n  const codegenAndroidPath = packageJson.codegenConfig?.outputDir?.android;\n  if (codegenAndroidPath != null) {\n    report.info(\n      `Cleaning up previous Android codegen native code at ${kleur.blue(\n        path.relative(root, codegenAndroidPath)\n      )}`\n    );\n    await del([codegenAndroidPath]);\n  }\n\n  const codegenType = packageJson.codegenConfig?.type;\n\n  if (codegenType === undefined) {\n    report.error(\n      \"Couldn't find the 'type' value in 'codegenConfig'. Please check your package.json's 'codegenConfig' property and make sure 'type' is defined. https://reactnative.dev/docs/the-new-architecture/using-codegen#configuring-codegen\"\n    );\n    process.exit(1);\n  }\n\n  try {\n    await runRNCCli(['codegen']);\n\n    if (codegenType === 'modules' || codegenType === 'all') {\n      await patchCodegenAndroidPackage(root, packageJson, report);\n    }\n\n    report.success('Generated native code with codegen');\n  } catch (e: unknown) {\n    if (e != null && typeof e === 'object') {\n      if ('stdout' in e && e.stdout != null) {\n        report.error(\n          `Errors found while generating codegen files:\\n${e.stdout.toString()}`\n        );\n      } else if ('message' in e && typeof e.message === 'string') {\n        if (\n          e.message.includes(\n            \"Error: Cannot find module '@react-native-community/cli/package.json'\"\n          )\n        ) {\n          report.error(\n            \"You don't have `@react-native-community/cli` in your root package's dev dependencies. Please install it and make sure it uses the same version as your application.\"\n          );\n        } else {\n          report.error(e.message);\n        }\n      } else {\n        throw e;\n      }\n    } else {\n      throw e;\n    }\n\n    process.exit(1);\n  }\n}\n"],"mappings":"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","ignoreList":[]}